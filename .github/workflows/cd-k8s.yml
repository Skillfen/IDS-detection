name: CD Minikube + Terraform

on:
  workflow_run:
    workflows: ["DevSecOps CI/CD"]  # Nom exact du workflow CI
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    ##############################
    # 1️⃣ Checkout du code
    ##############################
    - name: Checkout code
      uses: actions/checkout@v3

    ##############################
    # 2️⃣ Installer Docker, Docker Compose et activer Buildx
    ##############################
    - name: Install Docker & Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg lsb-release
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
          https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        sudo usermod -aG docker $USER
        docker --version
        docker compose version

    - name: Enable Docker Buildx
      uses: docker/setup-buildx-action@v3

    ##############################
    # 3️⃣ Installer Minikube et kubectl
    ##############################
    - name: Install Minikube & kubectl
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    ##############################
    # 4️⃣ Démarrer Minikube
    ##############################
    - name: Start Minikube
      run: |
        sudo systemctl start docker
        minikube start --driver=docker --memory=4096 --cpus=2
        kubectl config use-context minikube
        minikube status

    ##############################
    # 5️⃣ Construire l’image Docker Compose dans Minikube
    ##############################
    - name: Build Docker image in Minikube
      run: |
        eval $(minikube -p minikube docker-env)
        docker compose -f ./webtest/webtest/docker-compose.yaml build
        docker images
        # ✅ Charger l'image locale dans Minikube
        minikube image load springboot-app:latest

    ##############################
    # 6️⃣ Déployer Spring Boot + H2 dans Kubernetes
    ##############################
    - name: Apply Kubernetes manifests
      run: |
        # ✅ Corriger l'annotation ingress (deprecated)
        sed -i 's/kubernetes.io\/ingress.class/nginx/g' k8s/ingress.yaml || true

        # ✅ Appliquer les manifests
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml || true

        echo "Pods after deployment:"
        kubectl get pods -o wide

        echo "⏳ Waiting for rollout to finish..."
        kubectl rollout status deployment/springboot-deployment --timeout=480s

    ##############################
    # 7️⃣ Debug automatique en cas d’échec
    ##############################
    - name: Debug pod startup
      if: failure()
      run: |
        echo "---- PODS ----"
        kubectl get pods -o wide
        echo "---- DESCRIBE ----"
        kubectl describe pod $(kubectl get pod -l app=springboot-app -o jsonpath='{.items[0].metadata.name}') || true
        echo "---- LOGS ----"
        kubectl logs -l app=springboot-app --tail=100 || true

    ##############################
    # 8️⃣ Installer et exécuter Terraform
    ##############################
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.7

    - name: Terraform apply
      working-directory: ./terraform
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: |
        terraform init
        terraform plan -out=tfplan
        terraform apply -auto-approve tfplan

    ##############################
    # 9️⃣ Vérifier le déploiement final
    ##############################
    - name: Get pods & services
      run: |
        kubectl get pods -o wide
        kubectl get svc -o wide
        echo "Application URL:"
        minikube service springboot-service --url
